#
# This is a generic Drone pipeline used to build and push Docker image.
#
# Assumptions:
#   - User name of Dockerhub is the same as Github.
#   - Name of the Dockerhub repository is the same as the Github repository,
#     minus the 'docker-' prefix.  For example, if the name of Github repository
#     is 'docker-myapp', the name of the Dockerhub repository is expected to be
#     'myapp'.
#   - The description to push to Dockerhub is contained in DOCKERHUB.md.
#
# The following secrets need to be defined:
#   - dockerhub_username: The username used to login to Dockerhub.
#   - dockerhub_password: The password used to login to Dockerhub.
#   - microbadger_webook: Microbadger webhook.
#

kind: pipeline
type: docker
name: default

steps:

- name: set-tags
  image: alpine
  commands:
  - echo -n "${DRONE_TAG}" >> .tags
  - echo "${DRONE_TAG}" | grep -q '-' || echo -n ",latest" >> .tags
  - echo -n "Docker image tags: `cat .tags`"
  when:
    ref:
    - refs/tags/v*

- name: build-only
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    build_args:
    - DOCKER_IMAGE_VERSION=drone-ci
    dry_run: true
  when:
    ref:
      exclude:
      - refs/tags/v*

- name: build-and-push
  image: plugins/docker
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password
    build_args:
    - DOCKER_IMAGE_VERSION=${DRONE_TAG:1}
    tags:
    - ${DRONE_TAG}
    - latest
  when:
    ref:
    - refs/tags/v*

- name: update-dockerhub-description
  image: jlesage/drone-push-readme
  settings:
    repo: ${DRONE_REPO_NAMESPACE}/${DRONE_REPO_NAME##docker-}
    username:
      from_secret: dockerhub_username
    password:
      from_secret: dockerhub_password
    readme: DOCKERHUB.md
  when:
    ref:
    - refs/tags/v*

- name: microbadger
  image: plugins/webhook
  settings:
    urls:
      from_secret: microbadger_webhook
  failure: ignore
  when:
    ref:
    - refs/tags/v*

